<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xyz.itwill.mapper.CommentsMapper">
	<select id="selectCommentsList" resultType="Comments">
		select * from (select rownum rn, coco.* from(select comment_idx, comment_board_idx, comment_user_id, content, comment_image,comment_reg_date, comment_up_date, comment_user_ip, comment_ref
		, comment_restep, comment_level, comment_status, comment_starup, comment_stardown, comment_spam, comment_reuser, user_nickname from comments join users on comment_user_id=user_id where comment_board_idx=#{commentBoardIdx} and comment_status&gt;=1 order by comment_ref desc,comment_restep) coco) where rn between #{startRow} and #{endRow}
	</select>
	<select id="selectCommentsCounts" resultType="int">
		select count(*) from comments where comment_board_idx=#{commentBoardIdx} and comment_status&gt;=1 	
	</select>
	<select id="selectCommentNextNum" resultType="int">
		select comments_seq.nextval from dual
	</select>
	<insert id="insertComment">
		insert into comments values(#{commentIdx},#{commentBoardIdx},#{commentUserId},#{content},#{commentImage},sysdate,null,#{commentUserIp},#{commentRef}
		 ,#{commentRestep},#{commentLevel},1,0,0,0,#{commentReuser})
	</insert>
	<update id="updateCommentRestep">
		update comments set comment_restep=comment_restep+1 where comment_ref=#{commentRef} and comment_restep &gt; #{commentRestep}
	</update>

	<update id="updateComment">
		update comments set content=#{content}, comment_image=#{commentImage}, comment_up_date=sysdate where comment_board_idx=#{commentBoardIdx}
	</update>
	
	<update id="deleteComment">
		update comments set comment_status=0 where comment_idx=#{commentIdx}
	</update>
	
	<update id="deleterrComment">
		update comments set comment_status=2 where comment_idx=#{commentIdx}
	</update>
	
	<select id="selectCommentByNum" resultType="Comments">
		select comment_idx, comment_board_idx, comment_user_id, content, comment_image,comment_reg_date, comment_up_date, comment_user_ip, comment_ref
		, comment_restep, comment_level, comment_status, comment_starup, comment_stardown, comment_spam, comment_reuser, user_nickname from comments join users on comment_user_id=user_id where comment_idx=#{commentIdx}
	</select>
	<select id="selectCommentCountByRef" resultType="int">
		select count(*) from comments where comment_ref=#{commentRef}
	</select>
	
	<update id="commentUpStar">
		update comments set comment_starup=comment_starup+1 where comment_idx=#{commentIdx}
	</update>
	
	<update id="commentSpam">
		update comments set comment_spam=comment_spam+1 where comment_idx=#{commentIdx}
	</update>
	
	<insert id="CBinsert">
		insert into comment_ballot values(comment_ballot_seq.nextval, #{ballotCommentIdx}, #{ballotCommentUserId}, #{ballotCommentStar}, #{ballotCommentSpam} )
	</insert>
	
	<update id="CBupdate">
		update comment_ballot set ballot_comment_star=#{ballotCommentStar}, ballot_comment_spam=#{ballotCommentSpam} where ballot_comment_idx=#{ballotCommentIdx}
	</update>
	
	<select id="selectCBallotByIdx" resultType="CBallot">
		select co_ba_idx, ballot_comment_idx, ballot_comment_user_id, ballot_comment_star, ballot_comment_spam from  comment_ballot where ballot_comment_idx=#{ballotCommentIdx} and  ballot_comment_user_id=#{ballotCommentUserId}
	</select>
	
	<!-- 작성한 댓글 조회 -->
<select id="selectCommentsByUserId" parameterType="string" resultType="Comments">
    SELECT c.COMMENT_IDX AS commentIdx,
           c.COMMENT_BOARD_IDX AS commentBoardIdx,
           c.COMMENT_USER_ID AS commentUserId,
           c.CONTENT AS content,
           c.COMMENT_IMAGE AS commentImage,
           TO_CHAR(c.COMMENT_REG_DATE, 'YYYY-MM-DD HH24:MI:SS') AS commentRegDate,
           TO_CHAR(c.COMMENT_UP_DATE, 'YYYY-MM-DD HH24:MI:SS') AS commentUpDate,
           c.COMMENT_USER_IP AS commentUserIp,
           c.COMMENT_REF AS commentRef,
           c.COMMENT_RESTEP AS commentRestep,
           c.COMMENT_LEVEL AS commentLevel,
           c.COMMENT_STATUS AS commentStatus,
           c.COMMENT_STARUP AS commentStarup,
           c.COMMENT_STARDOWN AS commentStardown,
           c.COMMENT_SPAM AS commentSpam,
           (SELECT USER_NICKNAME FROM USERS WHERE USER_ID = c.COMMENT_USER_ID) AS userNickname,
           (SELECT BOARD_STATUS FROM BOARD WHERE BOARD_POST_IDX = c.COMMENT_BOARD_IDX) AS boardStatus -- 게시글 상태 가져오기
    FROM COMMENTS c
    WHERE c.COMMENT_USER_ID = #{userId}
    ORDER BY c.COMMENT_REG_DATE DESC
</select>



	<update id="UpdatCommentStatus3">
		update comments set comment_status=3 where comment_idx=#{commentIdx}
	</update>
	
</mapper>